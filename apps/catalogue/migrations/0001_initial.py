# Generated by Django 2.2.9 on 2020-01-24 16:37

import autoslug.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.utils.helpers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128, unique=True, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=True, populate_from='name', unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, upload_to=apps.utils.helpers.default_content_path, verbose_name='Image')),
                ('description', models.TextField()),
                ('category', models.ForeignKey(help_text='A particular group of related products', on_delete='Category', related_name='products', related_query_name='product', to='catalogue.Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RequestItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Stock Needed')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=1, verbose_name='Status')),
                ('summary', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestitems', related_query_name='request_item', to='catalogue.Product')),
                ('user', models.ForeignKey(help_text='The user who requested the product.', on_delete='Requested By', related_name='requestitems', related_query_name='request_item', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RequestItem',
                'verbose_name_plural': 'RequestItems',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveSmallIntegerField(verbose_name='Stock Quantity')),
                ('limit', models.PositiveSmallIntegerField(help_text='Admin get notification when stock quantity value is less than stock limit value.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Stock Limit')),
                ('product', models.OneToOneField(on_delete='Product', related_name='stock', related_query_name='stock', to='catalogue.Product')),
            ],
            options={
                'verbose_name': 'ProductStock',
                'verbose_name_plural': 'ProductStocks',
                'ordering': ['product__name'],
            },
        ),
        migrations.CreateModel(
            name='IssueItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Stock')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('summary', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issueitems', related_query_name='issue_item', to='catalogue.Product')),
                ('requested_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='issueitems', related_query_name='issue_item', to='catalogue.RequestItem')),
                ('user', models.ForeignKey(help_text='The user in which product is issued.', on_delete='Issued To', related_name='issueitems', related_query_name='issue_item', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IssuedItem',
                'verbose_name_plural': 'IssuedItems',
                'ordering': ['-timestamp'],
            },
        ),
    ]
